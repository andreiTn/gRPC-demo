// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/srvstr.proto

package srvstr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgReq struct {
	Rows                 uint32   `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgReq) Reset()         { *m = MsgReq{} }
func (m *MsgReq) String() string { return proto.CompactTextString(m) }
func (*MsgReq) ProtoMessage()    {}
func (*MsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_srvstr_a488c9b217894f1b, []int{0}
}
func (m *MsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgReq.Unmarshal(m, b)
}
func (m *MsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgReq.Marshal(b, m, deterministic)
}
func (dst *MsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReq.Merge(dst, src)
}
func (m *MsgReq) XXX_Size() int {
	return xxx_messageInfo_MsgReq.Size(m)
}
func (m *MsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReq proto.InternalMessageInfo

func (m *MsgReq) GetRows() uint32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

type MsgRes struct {
	Row                  string   `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgRes) Reset()         { *m = MsgRes{} }
func (m *MsgRes) String() string { return proto.CompactTextString(m) }
func (*MsgRes) ProtoMessage()    {}
func (*MsgRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_srvstr_a488c9b217894f1b, []int{1}
}
func (m *MsgRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRes.Unmarshal(m, b)
}
func (m *MsgRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRes.Marshal(b, m, deterministic)
}
func (dst *MsgRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRes.Merge(dst, src)
}
func (m *MsgRes) XXX_Size() int {
	return xxx_messageInfo_MsgRes.Size(m)
}
func (m *MsgRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRes.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRes proto.InternalMessageInfo

func (m *MsgRes) GetRow() string {
	if m != nil {
		return m.Row
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgReq)(nil), "MsgReq")
	proto.RegisterType((*MsgRes)(nil), "MsgRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgServiceClient is the client API for MsgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgServiceClient interface {
	GetMsg(ctx context.Context, in *MsgReq, opts ...grpc.CallOption) (MsgService_GetMsgClient, error)
}

type msgServiceClient struct {
	cc *grpc.ClientConn
}

func NewMsgServiceClient(cc *grpc.ClientConn) MsgServiceClient {
	return &msgServiceClient{cc}
}

func (c *msgServiceClient) GetMsg(ctx context.Context, in *MsgReq, opts ...grpc.CallOption) (MsgService_GetMsgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MsgService_serviceDesc.Streams[0], "/MsgService/GetMsg", opts...)
	if err != nil {
		return nil, err
	}
	x := &msgServiceGetMsgClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MsgService_GetMsgClient interface {
	Recv() (*MsgRes, error)
	grpc.ClientStream
}

type msgServiceGetMsgClient struct {
	grpc.ClientStream
}

func (x *msgServiceGetMsgClient) Recv() (*MsgRes, error) {
	m := new(MsgRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MsgServiceServer is the server API for MsgService service.
type MsgServiceServer interface {
	GetMsg(*MsgReq, MsgService_GetMsgServer) error
}

func RegisterMsgServiceServer(s *grpc.Server, srv MsgServiceServer) {
	s.RegisterService(&_MsgService_serviceDesc, srv)
}

func _MsgService_GetMsg_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MsgReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MsgServiceServer).GetMsg(m, &msgServiceGetMsgServer{stream})
}

type MsgService_GetMsgServer interface {
	Send(*MsgRes) error
	grpc.ServerStream
}

type msgServiceGetMsgServer struct {
	grpc.ServerStream
}

func (x *msgServiceGetMsgServer) Send(m *MsgRes) error {
	return x.ServerStream.SendMsg(m)
}

var _MsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MsgService",
	HandlerType: (*MsgServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMsg",
			Handler:       _MsgService_GetMsg_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/srvstr.proto",
}

func init() { proto.RegisterFile("pb/srvstr.proto", fileDescriptor_srvstr_a488c9b217894f1b) }

var fileDescriptor_srvstr_a488c9b217894f1b = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x48, 0xd2, 0x2f,
	0x2e, 0x2a, 0x2b, 0x2e, 0x29, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe1, 0x62, 0xf3,
	0x2d, 0x4e, 0x0f, 0x4a, 0x2d, 0x14, 0x12, 0xe2, 0x62, 0x29, 0xca, 0x2f, 0x2f, 0x96, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0d, 0x02, 0xb3, 0x95, 0xa4, 0xa0, 0xb2, 0xc5, 0x42, 0x02, 0x5c, 0xcc, 0x45,
	0xf9, 0xe5, 0x60, 0x49, 0xce, 0x20, 0x10, 0xd3, 0x48, 0x87, 0x8b, 0xcb, 0xb7, 0x38, 0x3d, 0x38,
	0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0x48, 0x8e, 0x8b, 0xcd, 0x3d, 0xb5, 0xc4, 0xb7, 0x38, 0x5d,
	0x88, 0x5d, 0x0f, 0x62, 0xa0, 0x14, 0x94, 0x51, 0xac, 0xc4, 0x60, 0xc0, 0x98, 0xc4, 0x06, 0xb6,
	0xce, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x90, 0x1d, 0x99, 0x81, 0x00, 0x00, 0x00,
}
